{"version":3,"sources":["components/MyMessage.jsx","components/TheirMessage.jsx","components/MessageForm.jsx","components/Header.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","bind","SendOutlined","useStyles","makeStyles","theme","root","flexGrow","menuButton","spacing","title","ButtonAppBar","classes","AppBar","position","Toolbar","Typography","variant","localStorage","getItem","Button","onClick","removeItem","window","location","reload","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","keys","Object","key","lastMessageKey","width","renderMessages","height","Modal","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","setItem","required","align","App","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","LoginForm","ReactDOM","render","document","getElementById"],"mappings":"sMAmBeA,EAnBG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,OAAIA,EAAQC,aAAeD,EAAQC,YAAYC,OAAS,EAEpD,qBACEC,IAAKH,EAAQC,YAAY,GAAGG,KAC5BC,IAAI,qBACJC,UAAU,gBACVC,MAAO,CAAEC,MAAO,WAMpB,qBAAKF,UAAU,UAAUC,MAAO,CAAEC,MAAO,QAASC,YAAa,OAAQC,MAAO,QAASC,gBAAiB,WAAxG,SACGX,EAAQY,QCeAC,EA7BM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAad,EAAc,EAAdA,QAC7Be,GAAwBD,GAAeA,EAAYE,OAAOC,WAAajB,EAAQgB,OAAOC,SAE5F,OACE,sBAAKX,UAAU,cAAf,UACGS,GACC,qBACET,UAAU,iBACVC,MAAO,CAAEW,gBAAiBlB,EAAQgB,QAAR,cAAyBhB,EAAQgB,OAAOG,OAAxC,QAG7BnB,EAAQC,aAAeD,EAAQC,YAAYC,OAAS,EAEjD,qBACEC,IAAKH,EAAQC,YAAY,GAAGG,KAC5BC,IAAI,qBACJC,UAAU,gBACVC,MAAO,CAAEa,WAAYL,EAAuB,MAAQ,UAItD,qBAAKT,UAAU,UAAUC,MAAO,CAAEC,MAAO,OAAQG,gBAAiB,UAAWS,WAAYL,EAAuB,MAAQ,QAAxH,SACGf,EAAQY,W,0BCoCNS,EAtDK,SAACC,GACnB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MAQVC,EAAe,SAACC,GACpBA,EAAMC,iBAEN,IAAMlB,EAAOY,EAAMO,OAEfnB,EAAKV,OAAS,GAChB8B,YAAYL,EAAOD,EAAQ,CAAEd,SAG/Ba,EAAS,KAOX,OACE,uBAAMnB,UAAU,eAAe2B,SAAUL,EAAzC,UACE,uBACEtB,UAAU,gBACV4B,YAAY,oBACZV,MAAOA,EACPW,SA5Be,SAACN,GACpBJ,EAASI,EAAMO,OAAOZ,OAEtBa,YAASf,EAAOI,IA0BZO,SAAUL,IAEZ,uBAAOU,QAAQ,gBAAf,SACE,sBAAMhC,UAAU,eAAhB,SACE,cAACiC,EAAA,EAAD,CAAiBjC,UAAU,qBAG/B,uBACEkC,KAAK,OACLC,UAAU,EACVC,GAAG,gBACHnC,MAAO,CAAEoC,QAAS,QAClBR,SAvBe,SAACN,GACpBG,YAAYL,EAAOD,EAAQ,CAAEkB,MAAOf,EAAMO,OAAOQ,MAAOhC,KAAM,MAsBnCiC,K,aAEzB,wBAAQL,KAAK,SAASlC,UAAU,cAAhC,SACE,cAACwC,EAAA,EAAD,CAAcxC,UAAU,oB,6CC7C1ByC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACV3C,YAAawC,EAAMI,QAAQ,IAE7BC,MAAO,CACLH,SAAU,OAIC,SAASI,IACtB,IAAMC,EAAUT,IAEhB,OACE,qBAAKzC,UAAWkD,EAAQN,KAAxB,SACE,cAACO,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKvD,UAAWkD,EAAQF,MAA5C,SACGQ,aAAaC,QAAQ,cAExB,cAACC,EAAA,EAAD,CACEtD,MAAM,UACNuD,QAAS,WACPH,aAAaI,WAAW,YACxBJ,aAAaI,WAAW,YACxBC,OAAOC,SAASC,UALpB,2BCxBV,IA6DeC,EA7DE,SAAChD,GAChB,IAAQiD,EAA0CjD,EAA1CiD,MAAOC,EAAmClD,EAAnCkD,WAAYC,EAAuBnD,EAAvBmD,SAAUC,EAAapD,EAAboD,SAE/BC,EAAOJ,GAASA,EAAMC,GAEtBI,EAAqB,SAAC5E,EAAS6E,GAAV,OAA0BF,EAAKG,OAAOC,KAAI,SAACC,EAAQC,GAAT,OAAmBD,EAAOE,YAAclF,EAAQ0C,IACnH,qBAEEpC,UAAU,eACVC,MAAO,CACLC,MAAOqE,EAAc,QAAU,OAC/B3D,gBAAiB8D,EAAOA,OAAO7D,QAAd,cAA+B6D,EAAOA,OAAO7D,OAA7C,OALrB,eACe8D,QAgCjB,OAAKN,EAGH,qCACE,cAAC,EAAD,IACA,sBAAKrE,UAAU,YAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,aAAf,gBAA6BqE,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMrB,QACnC,qBAAKhD,UAAU,gBAAf,SACGqE,EAAKG,OAAOC,KAAI,SAACC,GAAD,iBAAgBA,EAAOA,OAAO/D,kBAhClC,WACrB,IAAMkE,EAAOC,OAAOD,KAAKT,GAEzB,OAAOS,EAAKJ,KAAI,SAACM,EAAKJ,GACpB,IAAMjF,EAAU0E,EAASW,GACnBC,EAA2B,IAAVL,EAAc,KAAOE,EAAKF,EAAQ,GACnDJ,EAAcJ,IAAazE,EAAQgB,OAAOC,SAEhD,OACE,sBAA0BV,MAAO,CAAEgF,MAAO,QAA1C,UACE,qBAAKjF,UAAU,gBAAf,SACGuE,EACG,cAAC,EAAD,CAAW7E,QAASA,IACpB,cAAC,EAAD,CAAcA,QAASA,EAASc,YAAa4D,EAASY,OAE5D,qBAAKhF,UAAU,gBAAgBC,MAAO,CAAEE,YAAaoE,EAAc,OAAS,MAAOzD,WAAYyD,EAAc,MAAQ,QAArH,SACGD,EAAmB5E,EAAS6E,OAPjC,cAAiBI,OA0BhBO,GACD,qBAAKjF,MAAO,CAAEkF,OAAQ,WACtB,qBAAKnF,UAAU,yBAAf,SACE,cAAC,EAAD,2BAAiBgB,GAAjB,IAAwBI,OAAQ8C,aAftB,yB,yCCILkB,EA3CD,WACZ,MAAgCnE,mBAAS,IAAzC,mBAAON,EAAP,KAAiB0E,EAAjB,KACA,EAAgCpE,mBAAS,IAAzC,mBAAOqE,EAAP,KAAiBC,EAAjB,KACA,EAA0BtE,mBAAS,IAAnC,mBAAOuE,EAAP,KAAcC,EAAd,KAEMnE,EAAY,uCAAG,WAAOoE,GAAP,eAAAC,EAAA,6DACnBD,EAAElE,iBAEIoE,EAAa,CAAE,aAVP,uCAUgC,YAAajF,EAAU,cAAe2E,GAHjE,kBAMXO,IAAMC,IAAI,kCAAmC,CAAEC,QAASH,IAN7C,OAQjBpC,aAAawC,QAAQ,WAAYrF,GACjC6C,aAAawC,QAAQ,WAAYV,GAEjCzB,OAAOC,SAASC,SAChB0B,EAAS,IAZQ,kDAcjBA,EAAS,gCAdQ,0DAAH,sDAkBlB,OACE,qBAAKzF,UAAU,UAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,QAAd,8BACA,uBAAM2B,SAAUL,EAAhB,UACE,uBAAOY,KAAK,OAAOhB,MAAOP,EAAUkB,SAAU,SAAC6D,GAAD,OAAOL,EAAYK,EAAE5D,OAAOZ,QAAQlB,UAAU,QAAQ4B,YAAY,WAAWqE,UAAQ,IACnI,uBAAO/D,KAAK,WAAWhB,MAAOoE,EAAUzD,SAAU,SAAC6D,GAAD,OAAOH,EAAYG,EAAE5D,OAAOZ,QAAQlB,UAAU,QAAQ4B,YAAY,WAAWqE,UAAQ,IACvI,qBAAKC,MAAM,SAAX,SACE,wBAAQhE,KAAK,SAASlC,UAAU,SAAhC,SACE,yDAIN,6BAAKwF,UChBEW,G,OAjBH,WACV,OAAK3C,aAAaC,QAAQ,YAGxB,cAAC,IAAD,CACE0B,OAAO,QACPiB,UARY,uCASZjC,SAAUX,aAAaC,QAAQ,YAC/B4C,WAAY7C,aAAaC,QAAQ,YACjC6C,eAAgB,SAACC,GAAD,OAAkB,cAAC,EAAD,eAAcA,KAChDC,aAAc,kBAAM,IAAIC,MAAM,yDAAyDC,UAT7C,cAACC,EAAD,MCJhDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.24ffbc63.chunk.js","sourcesContent":["const MyMessage = ({ message }) => {\n  if (message.attachments && message.attachments.length > 0) {\n    return (\n      <img\n        src={message.attachments[0].file}\n        alt=\"message-attachment\"\n        className=\"message-image\"\n        style={{ float: 'right' }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\n      {message.text}\n    </div>\n  );\n};\n\nexport default MyMessage;\n","const TheirMessage = ({ lastMessage, message }) => {\n  const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\n\n  return (\n    <div className=\"message-row\">\n      {isFirstMessageByUser && (\n        <div\n          className=\"message-avatar\"\n          style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\n        />\n      )}\n      {message.attachments && message.attachments.length > 0\n        ? (\n          <img\n            src={message.attachments[0].file}\n            alt=\"message-attachment\"\n            className=\"message-image\"\n            style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\n          />\n        )\n        : (\n          <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\n            {message.text}\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default TheirMessage;\n","import { useState } from 'react';\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\nimport { sendMessage, isTyping } from 'react-chat-engine';\n\nconst MessageForm = (props) => {\n  const [value, setValue] = useState('');\n  const { chatId, creds } = props;\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n\n    isTyping(props, chatId);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const text = value.trim();\n\n    if (text.length > 0) {\n      sendMessage(creds, chatId, { text });\n    }\n\n    setValue('');\n  };\n\n  const handleUpload = (event) => {\n    sendMessage(creds, chatId, { files: event.target.files, text: '' });\n  };\n\n  return (\n    <form className=\"message-form\" onSubmit={handleSubmit}>\n      <input\n        className=\"message-input\"\n        placeholder=\"Send a message...\"\n        value={value}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n      <label htmlFor=\"upload-button\">\n        <span className=\"image-button\">\n          <PictureOutlined className=\"picture-icon\" />\n        </span>\n      </label>\n      <input\n        type=\"file\"\n        multiple={false}\n        id=\"upload-button\"\n        style={{ display: 'none' }}\n        onChange={handleUpload.bind(this)}\n      />\n      <button type=\"submit\" className=\"send-button\">\n        <SendOutlined className=\"send-icon\" />\n      </button>\n    </form>\n  );\n};\n\nexport default MessageForm;\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {localStorage.getItem('username')}\r\n          </Typography>\r\n          <Button\r\n            color=\"inherit\"\r\n            onClick={() => {\r\n              localStorage.removeItem('username');\r\n              localStorage.removeItem('password');\r\n              window.location.reload();\r\n            }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import MyMessage from './MyMessage';\nimport TheirMessage from './TheirMessage';\nimport MessageForm from './MessageForm';\nimport Header from './Header';\n\nconst ChatFeed = (props) => {\n  const { chats, activeChat, userName, messages } = props;\n\n  const chat = chats && chats[activeChat];\n\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\n    <div\n      key={`read_${index}`}\n      className=\"read-receipt\"\n      style={{\n        float: isMyMessage ? 'right' : 'left',\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\n      }}\n    />\n  ));\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n\n      return (\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\n          <div className=\"message-block\">\n            {isMyMessage\n              ? <MyMessage message={message} />\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\n          </div>\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\n            {renderReadReceipts(message, isMyMessage)}\n          </div>\n        </div>\n      );\n    });\n  };\n\n  if (!chat) return <div />;\n\n  return (\n    <>\n      <Header />\n      <div className=\"chat-feed\">\n        <div className=\"chat-title-container\">\n          <div className=\"chat-title\">{chat?.title}</div>\n          <div className=\"chat-subtitle\">\n            {chat.people.map((person) => ` ${person.person.username}`)}\n          </div>\n        </div>\n        {renderMessages()}\n        <div style={{ height: '100px' }} />\n        <div className=\"message-form-container\">\n          <MessageForm {...props} chatId={activeChat} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ChatFeed;\n\n","import { useState } from 'react';\nimport axios from 'axios';\n\nconst projectID = '3d929863-29d9-483e-8b71-11411428dbd9';\n\nconst Modal = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const authObject = { 'Project-ID': projectID, 'User-Name': username, 'User-Secret': password };\n\n    try {\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\n\n      localStorage.setItem('username', username);\n      localStorage.setItem('password', password);\n\n      window.location.reload();\n      setError('');\n    } catch (err) {\n      setError('Oops, incorrect credentials.');\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"form\">\n        <h1 className=\"title\">Chat Application</h1>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\n          <div align=\"center\">\n            <button type=\"submit\" className=\"button\">\n              <span>Start chatting</span>\n            </button>\n          </div>\n        </form>\n        <h1>{error}</h1>\n      </div>\n    </div>\n\n  );\n};\n\nexport default Modal;\n","import { ChatEngine } from 'react-chat-engine';\n\nimport ChatFeed from './components/ChatFeed';\nimport LoginForm from './components/LoginForm';\nimport './App.css';\n\nconst projectID = '3d929863-29d9-483e-8b71-11411428dbd9';\n\nconst App = () => {\n  if (!localStorage.getItem('username')) return <LoginForm />;\n\n  return (\n    <ChatEngine\n      height=\"100vh\"\n      projectID={projectID}\n      userName={localStorage.getItem('username')}\n      userSecret={localStorage.getItem('password')}\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n      onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\n    />\n  );\n};\n\n// infinite scroll, logout, more customizations...\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}